version: '3.8'

services:
  # Enhanced Fitbit Data Collector
  fitbit-collector:
    build: .
    container_name: fitbit-collector
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./tokens:/app/tokens
      - /etc/timezone:/etc/timezone:ro
    environment:
      # Fitbit API Configuration
      - FITBIT_CLIENT_ID=${FITBIT_CLIENT_ID}
      - FITBIT_CLIENT_SECRET=${FITBIT_CLIENT_SECRET}
      - FITBIT_ACCESS_TOKEN=${FITBIT_ACCESS_TOKEN}
      - FITBIT_REFRESH_TOKEN=${FITBIT_REFRESH_TOKEN}
      
      # InfluxDB Configuration
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - INFLUX_ORG=${INFLUX_ORG:-fitbit}
      - INFLUX_BUCKET=${INFLUX_BUCKET:-fitbit}
      
      # Health Conditions (set to true/false)
      - HEALTH_LONG_COVID=${HEALTH_LONG_COVID:-true}
      - HEALTH_POTS=${HEALTH_POTS:-true}
      - HEALTH_SMALL_FIBER_NEUROPATHY=${HEALTH_SMALL_FIBER_NEUROPATHY:-true}
      - HEALTH_PEM=${HEALTH_PEM:-true}
      - HEALTH_DYSAUTONOMIA=${HEALTH_DYSAUTONOMIA:-true}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=/app/logs/fitbit_sync.log
      
      # Collection Settings
      - SYNC_INTERVAL=${SYNC_INTERVAL:-3600}  # 1 hour in seconds
      - COLLECT_INTRADAY=${COLLECT_INTRADAY:-true}
      - INTRADAY_DETAIL_LEVEL=${INTRADAY_DETAIL_LEVEL:-1min}
      
    depends_on:
      - influxdb
    networks:
      - fitbit-monitoring

  # InfluxDB 2.x Time Series Database
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    environment:
      # Initial setup
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-fitbit-admin-password}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG:-fitbit}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET:-fitbit}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
      
      # Performance tuning
      - INFLUXDB_HTTP_READ_TIMEOUT=0
      - INFLUXDB_HTTP_WRITE_TIMEOUT=0
      - INFLUXDB_DATA_INDEX_VERSION=tsi1
    networks:
      - fitbit-monitoring

  # Grafana for Data Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/plugins:/var/lib/grafana/plugins
    environment:
      # Admin credentials
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-fitbit-grafana-password}
      
      # Plugin installation
      - GF_INSTALL_PLUGINS=marcusolsson-hourly-heatmap-panel,grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      
      # Security settings
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      
      # Performance settings
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
      
      # JARVIS theme customization
      - GF_USERS_DEFAULT_THEME=dark
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/jarvis_medical_suite.json
      
    depends_on:
      - influxdb
    networks:
      - fitbit-monitoring

  # Grafana Image Renderer (for PDF exports and alerts)
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: grafana-renderer
    restart: unless-stopped
    environment:
      - ENABLE_METRICS=true
      - HTTP_HOST=0.0.0.0
    networks:
      - fitbit-monitoring

  # Redis for caching (optional, for performance)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    volumes:
      - redis-storage:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-fitbit-cache-password}
    command: redis-server --requirepass ${REDIS_PASSWORD:-fitbit-cache-password}
    networks:
      - fitbit-monitoring

  # Nginx Reverse Proxy (optional, for HTTPS and routing)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - grafana
      - influxdb
    networks:
      - fitbit-monitoring

  # Health Check Service
  healthcheck:
    build:
      context: .
      dockerfile: Dockerfile.healthcheck
    container_name: fitbit-healthcheck
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - INFLUX_ORG=${INFLUX_ORG:-fitbit}
      - INFLUX_BUCKET=${INFLUX_BUCKET:-fitbit}
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-fitbit-grafana-password}
      - HEALTH_CHECK_INTERVAL=300  # 5 minutes
    depends_on:
      - influxdb
      - grafana
      - fitbit-collector
    networks:
      - fitbit-monitoring

volumes:
  influxdb-storage:
    driver: local
  grafana-storage:
    driver: local
  redis-storage:
    driver: local

networks:
  fitbit-monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16